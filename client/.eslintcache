[{"/home/droid_x/Documents/WEBD/academic-portal/client/src/index.js":"1","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/index.js":"2","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/App.js":"3","/home/droid_x/Documents/WEBD/academic-portal/client/src/store/index.js":"4","/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/index.js":"5","/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/user.js":"6","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/actionTypes.js":"7","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AssignmentList.js":"8","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Footer.js":"9","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Login.js":"10","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Signup.js":"11","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/user.js":"12","/home/droid_x/Documents/WEBD/academic-portal/client/src/helpers/urls.js":"13","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Home.js":"14","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AppBar.js":"15","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Page404.js":"16","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Profile.js":"17"},{"size":425,"mtime":1609017240874,"results":"18","hashOfConfig":"19"},{"size":406,"mtime":1609266260484,"results":"20","hashOfConfig":"19"},{"size":1408,"mtime":1609266279825,"results":"21","hashOfConfig":"19"},{"size":288,"mtime":1609016940484,"results":"22","hashOfConfig":"19"},{"size":114,"mtime":1609017293110,"results":"23","hashOfConfig":"19"},{"size":1339,"mtime":1609017365102,"results":"24","hashOfConfig":"19"},{"size":580,"mtime":1609017418214,"results":"25","hashOfConfig":"19"},{"size":159,"mtime":1609019105399,"results":"26","hashOfConfig":"19"},{"size":627,"mtime":1609019341496,"results":"27","hashOfConfig":"19"},{"size":1798,"mtime":1609019498721,"results":"28","hashOfConfig":"19"},{"size":2771,"mtime":1609019786766,"results":"29","hashOfConfig":"19"},{"size":4392,"mtime":1609018796061,"results":"30","hashOfConfig":"19"},{"size":367,"mtime":1609020891503,"results":"31","hashOfConfig":"19"},{"size":200,"mtime":1609019146435,"results":"32","hashOfConfig":"19"},{"size":8125,"mtime":1609020213432,"results":"33","hashOfConfig":"19"},{"size":337,"mtime":1609266063600,"results":"34","hashOfConfig":"19"},{"size":2556,"mtime":1609266215568,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"5dd5pm",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/droid_x/Documents/WEBD/academic-portal/client/src/index.js",[],["73","74"],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/App.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/store/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/user.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/actionTypes.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AssignmentList.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Footer.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Login.js",["75"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\n\nimport { createSession } from '../actions/user';\n\nfunction Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  let onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  let onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let emailContent = email.trim();\n\n    if (emailContent.length !== 0 && password.length !== 0) {\n      console.log(emailContent, password);\n      props.dispatch(createSession(emailContent, password, 'teacher'));\n      setPassword('');\n    }\n  }\n\n  let { inProgress, isLoggedin } = props.user;\n  if (isLoggedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <form className=\"form-container\">\n      <p className=\"form-title\">Login</p>\n      <TextField\n        id=\"email\"\n        label=\"email\"\n        value={email}\n        variant=\"outlined\"\n        onChange={onChangeEmail}\n      />\n      <br />\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"password\"\n        value={password}\n        variant=\"outlined\"\n        onChange={onChangePassword}\n      />\n      <Button\n        type=\"submit\"\n        className=\"submit-btn\"\n        disabled={inProgress}\n        onClick={onSubmit}\n      >\n        Login\n      </Button>\n      <a href=\"#\">\n        <img\n          alt=\"sign up with google\"\n          src=\"https://www.flaticon.com/svg/static/icons/svg/281/281764.svg\"\n        />\n      </a>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Signup.js",["76"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\n\nimport { createUser } from '../actions/user';\n\nfunction Signup(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  let onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  let onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  let onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  let onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let emailContent = email.trim();\n    let nameContent = name.trim();\n\n    if (password !== confirmPassword) {\n      console.log('Passwords didnt match');\n      return;\n    }\n\n    if (\n      emailContent.length !== 0 &&\n      password.length !== 0 &&\n      nameContent.length !== 0\n    ) {\n      console.log(nameContent, emailContent, password);\n      props.dispatch(\n        createUser(\n          nameContent,\n          emailContent,\n          password,\n          confirmPassword,\n          'teacher'\n        )\n      );\n      setPassword('');\n      setConfirmPassword('');\n    }\n  }\n\n  let { inProgress, isLoggedin } = props.user;\n\n  if (isLoggedin) {\n    console.log('Redirect');\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <form className=\"form-container\">\n      <p className=\"form-title\">Signup</p>\n\n      <TextField\n        id=\"name\"\n        label=\"name\"\n        variant=\"outlined\"\n        value={name}\n        onChange={onChangeName}\n      />\n      <TextField\n        id=\"email\"\n        label=\"email\"\n        variant=\"outlined\"\n        value={email}\n        onChange={onChangeEmail}\n      />\n\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"password\"\n        variant=\"outlined\"\n        value={password}\n        onChange={onChangePassword}\n      />\n      <TextField\n        id=\"confirm_password\"\n        type=\"password\"\n        label=\"confirm password\"\n        variant=\"outlined\"\n        value={confirmPassword}\n        onChange={onChangeConfirmPassword}\n      />\n\n      <Button\n        type=\"submit\"\n        className=\"submit-btn\"\n        disabled={inProgress}\n        onClick={onSubmit}\n      >\n        Signup\n      </Button>\n      <a href=\"#\">\n        <img\n          alt=\"sign up with google\"\n          src=\"https://www.flaticon.com/svg/static/icons/svg/281/281764.svg\"\n        />\n      </a>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Signup);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/user.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/helpers/urls.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Home.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AppBar.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Page404.js",["77"],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Profile.js",["78","79"],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":63,"column":7,"nodeType":"86","endLine":63,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":111,"column":7,"nodeType":"86","endLine":111,"endColumn":19},{"ruleId":"87","severity":1,"message":"88","line":1,"column":10,"nodeType":"89","messageId":"90","endLine":1,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":41,"column":11,"nodeType":"86","endLine":41,"endColumn":40},{"ruleId":"91","severity":1,"message":"92","line":45,"column":11,"nodeType":"86","endLine":48,"endColumn":13},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'authorize' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]