[{"/home/droid_x/Documents/WEBD/academic-portal/client/src/index.js":"1","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/index.js":"2","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/App.js":"3","/home/droid_x/Documents/WEBD/academic-portal/client/src/store/index.js":"4","/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/index.js":"5","/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/user.js":"6","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/actionTypes.js":"7","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AssignmentList.js":"8","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Footer.js":"9","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Login.js":"10","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Signup.js":"11","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/user.js":"12","/home/droid_x/Documents/WEBD/academic-portal/client/src/helpers/urls.js":"13","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Home.js":"14","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AppBar.js":"15","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Page404.js":"16","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Profile.js":"17","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/SnackBar.js":"18"},{"size":425,"mtime":1609017240874,"results":"19","hashOfConfig":"20"},{"size":475,"mtime":1609271631151,"results":"21","hashOfConfig":"20"},{"size":1701,"mtime":1609272012309,"results":"22","hashOfConfig":"20"},{"size":288,"mtime":1609016940484,"results":"23","hashOfConfig":"20"},{"size":114,"mtime":1609017293110,"results":"24","hashOfConfig":"20"},{"size":1339,"mtime":1609017365102,"results":"25","hashOfConfig":"20"},{"size":580,"mtime":1609017418214,"results":"26","hashOfConfig":"20"},{"size":159,"mtime":1609019105399,"results":"27","hashOfConfig":"20"},{"size":627,"mtime":1609019341496,"results":"28","hashOfConfig":"20"},{"size":1798,"mtime":1609019498721,"results":"29","hashOfConfig":"20"},{"size":2771,"mtime":1609019786766,"results":"30","hashOfConfig":"20"},{"size":4392,"mtime":1609018796061,"results":"31","hashOfConfig":"20"},{"size":367,"mtime":1609020891503,"results":"32","hashOfConfig":"20"},{"size":200,"mtime":1609019146435,"results":"33","hashOfConfig":"20"},{"size":8125,"mtime":1609020213432,"results":"34","hashOfConfig":"20"},{"size":299,"mtime":1609268083789,"results":"35","hashOfConfig":"20"},{"size":2556,"mtime":1609266215568,"results":"36","hashOfConfig":"20"},{"size":1369,"mtime":1609271901504,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5dd5pm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},"/home/droid_x/Documents/WEBD/academic-portal/client/src/index.js",[],["81","82"],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/App.js",["83","84"],"import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\n// Actions\nimport { fetchUser } from '../actions/user';\n\n// Components\nimport {\n  Home,\n  Signup,\n  Login,\n  Footer,\n  ButtonAppBar,\n  Page404,\n  Profile,\n  CustomizedSnackbars,\n} from './';\nimport { Button } from '@material-ui/core';\n\nconst PrivateRoute = (privateRouteProps) => {\n  const { isLoggedin, path, component: Component } = privateRouteProps;\n  return (\n    <Route\n      path={path}\n      render={(props) => {\n        return isLoggedin ? <Component {...props} /> : <Redirect to=\"/login\" />;\n      }}\n    />\n  );\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchUser());\n  }\n\n  render() {\n    const isLoggedin = this.props.user.isLoggedin;\n\n    return (\n      <Router>\n        <ButtonAppBar />\n\n        {/* <CustomizedSnackbars\n          message=\"Hello X\"\n          variant=\"success\"\n          duration=\"2000\"\n          open={snackbarOpen}\n        /> */}\n\n        {/* <Button onClick={handleOpen}>SnackBar</Button> */}\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute\n            exact\n            path=\"/profile\"\n            component={Profile}\n            isLoggedin={isLoggedin}\n          />\n          <Route component={Page404} />\n        </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/store/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/index.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/reducers/user.js",[],["85","86"],"/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/actionTypes.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AssignmentList.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Footer.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Login.js",["87"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\n\nimport { createSession } from '../actions/user';\n\nfunction Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  let onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  let onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let emailContent = email.trim();\n\n    if (emailContent.length !== 0 && password.length !== 0) {\n      console.log(emailContent, password);\n      props.dispatch(createSession(emailContent, password, 'teacher'));\n      setPassword('');\n    }\n  }\n\n  let { inProgress, isLoggedin } = props.user;\n  if (isLoggedin) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <form className=\"form-container\">\n      <p className=\"form-title\">Login</p>\n      <TextField\n        id=\"email\"\n        label=\"email\"\n        value={email}\n        variant=\"outlined\"\n        onChange={onChangeEmail}\n      />\n      <br />\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"password\"\n        value={password}\n        variant=\"outlined\"\n        onChange={onChangePassword}\n      />\n      <Button\n        type=\"submit\"\n        className=\"submit-btn\"\n        disabled={inProgress}\n        onClick={onSubmit}\n      >\n        Login\n      </Button>\n      <a href=\"#\">\n        <img\n          alt=\"sign up with google\"\n          src=\"https://www.flaticon.com/svg/static/icons/svg/281/281764.svg\"\n        />\n      </a>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Signup.js",["88"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\n\nimport { createUser } from '../actions/user';\n\nfunction Signup(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  let onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  let onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  let onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  let onChangeConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let emailContent = email.trim();\n    let nameContent = name.trim();\n\n    if (password !== confirmPassword) {\n      console.log('Passwords didnt match');\n      return;\n    }\n\n    if (\n      emailContent.length !== 0 &&\n      password.length !== 0 &&\n      nameContent.length !== 0\n    ) {\n      console.log(nameContent, emailContent, password);\n      props.dispatch(\n        createUser(\n          nameContent,\n          emailContent,\n          password,\n          confirmPassword,\n          'teacher'\n        )\n      );\n      setPassword('');\n      setConfirmPassword('');\n    }\n  }\n\n  let { inProgress, isLoggedin } = props.user;\n\n  if (isLoggedin) {\n    console.log('Redirect');\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <form className=\"form-container\">\n      <p className=\"form-title\">Signup</p>\n\n      <TextField\n        id=\"name\"\n        label=\"name\"\n        variant=\"outlined\"\n        value={name}\n        onChange={onChangeName}\n      />\n      <TextField\n        id=\"email\"\n        label=\"email\"\n        variant=\"outlined\"\n        value={email}\n        onChange={onChangeEmail}\n      />\n\n      <TextField\n        id=\"password\"\n        type=\"password\"\n        label=\"password\"\n        variant=\"outlined\"\n        value={password}\n        onChange={onChangePassword}\n      />\n      <TextField\n        id=\"confirm_password\"\n        type=\"password\"\n        label=\"confirm password\"\n        variant=\"outlined\"\n        value={confirmPassword}\n        onChange={onChangeConfirmPassword}\n      />\n\n      <Button\n        type=\"submit\"\n        className=\"submit-btn\"\n        disabled={inProgress}\n        onClick={onSubmit}\n      >\n        Signup\n      </Button>\n      <a href=\"#\">\n        <img\n          alt=\"sign up with google\"\n          src=\"https://www.flaticon.com/svg/static/icons/svg/281/281764.svg\"\n        />\n      </a>\n    </form>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Signup);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/actions/user.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/helpers/urls.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Home.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/AppBar.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Page404.js",[],"/home/droid_x/Documents/WEBD/academic-portal/client/src/components/Profile.js",["89","90"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Grid, TextField } from '@material-ui/core';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n// import { updateUser } from '../actions/user';\n\nfunction Profile(props) {\n  const [name, setName] = useState(props.user.user.name);\n  const [email, setEmail] = useState(props.user.user.email);\n  let inProgress = props.user.inProgress;\n\n  if (!props.user.isLoggedin) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  let onChangeName = (e) => {\n    setName(e.target.value);\n  };\n\n  let onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  function onSubmit(e) {\n    e.preventDefault();\n    let emailContent = email.trim();\n    let nameContent = name.trim();\n\n    if (emailContent.length !== 0 && nameContent.length !== 0) {\n      console.log(nameContent, emailContent);\n      //   props.dispatch(updateUser(nameContent, emailContent));\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <div id=\"profile-page-container\">\n        <div id=\"cover-container\">\n          <img className=\"cover-img\" />\n        </div>\n\n        <div className=\"profile-update-container\">\n          <img\n            className=\"user-dp\"\n            src=\"https://cdn3.iconfinder.com/data/icons/users-6/100/2-256.png\"\n          />\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n              <AccountCircleIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"name-field\"\n                label=\"name\"\n                value={name}\n                onChange={onChangeName}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid container spacing={1} alignItems=\"flex-end\">\n            <Grid item>\n              <AlternateEmailIcon />\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"email-field\"\n                label=\"email\"\n                value={email}\n                onChange={onChangeEmail}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            disabled={inProgress}\n            id=\"update-btn\"\n            color=\"primary\"\n            onClick={onSubmit}\n          >\n            update\n          </Button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","/home/droid_x/Documents/WEBD/academic-portal/client/src/components/SnackBar.js",["91"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.open);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  let message = props.message;\n  let variant = props.variant;\n  let duration = props.duration;\n\n  return (\n    <div className={classes.root}>\n      <Snackbar open={open} autoHideDuration={duration} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={variant}>\n          {message}\n        </Alert>\n      </Snackbar>\n      {/* Examples:\n      <Alert severity=\"error\">This is an error message!</Alert>\n      <Alert severity=\"warning\">This is a warning message!</Alert>\n      <Alert severity=\"info\">This is an information message!</Alert>\n      <Alert severity=\"success\">This is a success message!</Alert> */}\n    </div>\n  );\n}\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":22,"column":3,"nodeType":"98","messageId":"99","endLine":22,"endColumn":22},{"ruleId":"96","severity":1,"message":"100","line":24,"column":10,"nodeType":"98","messageId":"99","endLine":24,"endColumn":16},{"ruleId":"92","replacedBy":"101"},{"ruleId":"94","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":63,"column":7,"nodeType":"105","endLine":63,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":111,"column":7,"nodeType":"105","endLine":111,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":41,"column":11,"nodeType":"105","endLine":41,"endColumn":40},{"ruleId":"106","severity":1,"message":"107","line":45,"column":11,"nodeType":"105","endLine":48,"endColumn":13},{"ruleId":"96","severity":1,"message":"100","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'CustomizedSnackbars' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.",["108"],["109"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]